{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":"<p>Mainly you could copy the README.md here. However, you should be careful with:</p> <ul> <li>The banner section is different</li> <li>Link to assets (handling dark mode is different between GitHub and the documentation)</li> <li>Relative links</li> </ul> <p></p> <p></p> <p> Libname is a Python toolkit dedicated to make people happy and fun.     Explore Libname docs \u00bb </p>"},{"location":"#table-of-contents","title":"\ud83d\udcda Table of contents","text":"<ul> <li>\ud83d\udcda Table of contents</li> <li>\ud83d\udd25 Tutorials</li> <li>\ud83d\ude80 Quick Start</li> <li>\ud83d\udce6 What's Included</li> <li>\ud83d\udc4d Contributing</li> <li>\ud83d\udc40 See Also</li> <li>\ud83d\ude4f Acknowledgments</li> <li>\ud83d\udc68\u200d\ud83c\udf93 Creator</li> <li>\ud83d\uddde\ufe0f Citation</li> <li>\ud83d\udcdd License</li> </ul>"},{"location":"#tutorials","title":"\ud83d\udd25 Tutorials","text":"<p>We propose some tutorials to get familiar with the library and its api:</p> <ul> <li>Getting started </li> </ul> <p>You do not necessarily need to register the notebooks on the GitHub. Notebooks can be hosted on a specific drive.</p>"},{"location":"#quick-start","title":"\ud83d\ude80 Quick Start","text":"<p>Libname requires some stuff and several libraries including Numpy. Installation can be done using Pypi:</p> <pre><code>pip install libname\n</code></pre> <p>Now that Libname is installed, here are some basic examples of what you can do with the available modules.</p>"},{"location":"#print-hello-world","title":"Print Hello World","text":"<p>Let's start with a simple example:</p> <pre><code>from libname.fake import hello_world\n\nhello_world()\n</code></pre>"},{"location":"#make-addition","title":"Make addition","text":"<p>In order to add <code>a</code> to <code>b</code> you can use:</p> <pre><code>from libname.fake import addition\n\na = 1\nb = 2\nc = addition(a, b)\n</code></pre>"},{"location":"#whats-included","title":"\ud83d\udce6 What's Included","text":"<p>A list or table of methods available</p>"},{"location":"#contributing","title":"\ud83d\udc4d Contributing","text":"<p>Feel free to propose your ideas or come and contribute with us on the Libname toolbox! We have a specific document where we describe in a simple way how to make your first pull request: just here.</p>"},{"location":"#see-also","title":"\ud83d\udc40 See Also","text":"<p>This library is one approach of many...</p> <p>Other tools to explain your model include:</p> <ul> <li>Random</li> </ul> <p>More from the DEEL project:</p> <ul> <li>Xplique a Python library exclusively dedicated to explaining neural networks.</li> <li>deel-lip a Python library for training k-Lipschitz neural networks on TF.</li> <li>Influenciae Python toolkit dedicated to computing influence values for the discovery of potentially problematic samples in a dataset.</li> <li>deel-torchlip a Python library for training k-Lipschitz neural networks on PyTorch.</li> <li>DEEL White paper a summary of the DEEL team on the challenges of certifiable AI and the role of data quality, representativity and explainability for this purpose.</li> </ul>"},{"location":"#acknowledgments","title":"\ud83d\ude4f Acknowledgments","text":"<p>  This project received funding from the French \u201dInvesting for the Future \u2013 PIA3\u201d program within the Artificial and Natural Intelligence Toulouse Institute (ANITI). The authors gratefully acknowledge the support of the  DEEL  project.</p>"},{"location":"#creators","title":"\ud83d\udc68\u200d\ud83c\udf93 Creators","text":"<p>If you want to highlights the main contributors</p>"},{"location":"#citation","title":"\ud83d\uddde\ufe0f Citation","text":"<p>If you use Libname as part of your workflow in a scientific publication, please consider citing the \ud83d\uddde\ufe0f our paper:</p> <pre><code>@article{rickroll,\n  title={Rickrolling},\n  author={Some Internet Trolls},\n  journal={Best Memes},\n  year={ND}\n}\n</code></pre>"},{"location":"#license","title":"\ud83d\udcdd License","text":"<p>The package is released under  MIT license.</p>"},{"location":"CONTRIBUTING/","title":"Contributing","text":"<p>Thanks for taking the time to contribute!</p> <p>From opening a bug report to creating a pull request: every contribution is appreciated and welcome. If you're planning to implement a new feature or change the api please create an issue first. This way we can ensure that your precious work is not in vain.</p>"},{"location":"CONTRIBUTING/#setup-with-make","title":"Setup with make","text":"<ul> <li>Clone the repo <code>git clone &lt;lib url&gt;.git</code>.</li> <li>Go to your freshly downloaded repo <code>cd &lt;lib-name&gt;</code></li> <li>Create a virtual environment and install the necessary dependencies for development:</li> </ul> <p><code>make prepare-dev &amp;&amp; source lib-name_dev_env/bin/activate</code>.</p> <p>Welcome to the team !</p>"},{"location":"CONTRIBUTING/#tests","title":"Tests","text":"<p>To run test <code>make test</code> This command activate your virtual environment and launch the <code>tox</code> command.</p> <p><code>tox</code> on the otherhand will do the following: - run pytest on the tests folder with python 3.6, python 3.7 and python 3.8</p> <p>Note: If you do not have those 3 interpreters the tests would be only performs with your current interpreter - run pylint on the deel-datasets main files, also with python 3.6, python 3.7 and python 3.8 Note: It is possible that pylint throw false-positive errors. If the linting test failed please check first pylint output to point out the reasons.</p> <p>Please, make sure you run all the tests at least once before opening a pull request.</p> <p>A word toward Pylint for those that don't know it:</p> <p>Pylint is a Python static code analysis tool which looks for programming errors, helps enforcing a coding standard, sniffs for code smells and offers simple refactoring suggestions.</p> <p>Basically, it will check that your code follow a certain number of convention. Any Pull Request will go through a Github workflow ensuring that your code respect the Pylint conventions (most of them at least).</p>"},{"location":"CONTRIBUTING/#submitting-changes","title":"Submitting Changes","text":"<p>After getting some feedback, push to your fork and submit a pull request. We may suggest some changes or improvements or alternatives, but for small changes your pull request should be accepted quickly (see Governance policy).</p> <p>Something that will increase the chance that your pull request is accepted:</p> <ul> <li>Write tests and ensure that the existing ones pass.</li> <li>If <code>make test</code> is succesful, you have fair chances to pass the CI workflows (linting and test)</li> <li>Follow the existing coding style and run <code>make check_all</code> to check all files format.</li> <li>Write a good commit message (we follow a lowercase convention).</li> <li>For a major fix/feature make sure your PR has an issue and if it doesn't, please create one. This would help discussion with the community, and polishing ideas in case of a new feature.</li> </ul>"},{"location":"api/fake/","title":"deel.libname.fake module","text":"<p>This will be the module description. It will be automatically generated properly with mkdocs. Do not forget to follow Google docstrings convention format.</p>"},{"location":"api/fake/#deel.libname.fake.addition","title":"<code>addition(a, b)</code>","text":"<p>A method that performs the following math:</p> \\[ c = a + b \\] <p>Parameters:</p> Name Type Description Default <code>a</code> <code>float</code> <p>A float number</p> required <code>b</code> <code>float</code> <p>Another float number</p> required <p>Returns:</p> Name Type Description <code>float</code> <p>The sum of a and b</p> Source code in <code>deel/libname/fake.py</code> <pre><code>def addition(a: float, b: float):\n\"\"\"\n    A method that performs the following math:\n\n    $$\n    c = a + b\n    $$\n\n    Args:\n        a (float): A float number\n        b (float): Another float number\n\n    Returns:\n        float: The sum of a and b\n    \"\"\"\n    c = np.sum([a, b])\n\n    return c\n</code></pre>"},{"location":"api/fake/#deel.libname.fake.hello_world","title":"<code>hello_world()</code>","text":"<p>A method that print \"Hello World!\".</p> Note <p>This method do not requires any parameters.</p> Source code in <code>deel/libname/fake.py</code> <pre><code>def hello_world():\n\"\"\"\n    A method that print \"Hello World!\".\n\n    Note:\n        This method do not requires any parameters.\n    \"\"\"\n    print(\"Hello World!\")\n</code></pre>"}]}